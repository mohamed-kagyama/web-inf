define(function(require, exports, module) {
var __disableStrictMode__ = "use strict";

var _ = require('underscore');

var fileDownloader = require("../util/fileDownloader");

var storeChangeEventCallbackExecutorUtil = require("../../../../common/util/storeChangeEventCallbackExecutorUtil");

var Backbone = require('backbone');

var applicationStateEventsEnum = require("../../../../dispatcher/enum/applicationStateEventsEnum");

/*
 * Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.
 * Licensed pursuant to commercial TIBCO End User License Agreement.
 */
var bundleTemplateName = 'domain18n.properties';

var OptionsDesignerDownloadBundleTemplateDialogController = function OptionsDesignerDownloadBundleTemplateDialogController(options) {
  this.applicationDispatcherEventBus = options.applicationDispatcherEventBus;
  this.storeChangeEventBus = options.storeChangeEventBus;
  this.optionsDesignerEventBus = options.optionsDesignerEventBus;
  this.downloadBundleTemplateDialog = options.downloadBundleTemplateDialog;
  this.clientDomainSchemaAdvancedOptionsService = options.clientDomainSchemaAdvancedOptionsService;

  this._initEvents();
};

_.extend(OptionsDesignerDownloadBundleTemplateDialogController.prototype, Backbone.Events, {
  _initEvents: function _initEvents() {
    var executor = storeChangeEventCallbackExecutorUtil.getExecutor(this);
    this.listenTo(this.storeChangeEventBus, 'change', executor);
    this.listenTo(this.optionsDesignerEventBus, 'show:downloadBundleTemplateDialog', this._onShowDownloadBundleTemplateDialog);
    this.listenTo(this.optionsDesignerEventBus, 'hide:downloadBundleTemplateDialog', this._onHideDownloadBundleTemplateDialog);
    this.listenTo(this.optionsDesignerEventBus, 'downloadBundleTemplate', this._onDownloadBundleTemplate);
  },
  _onShowDownloadBundleTemplateDialog: function _onShowDownloadBundleTemplateDialog() {
    this.downloadBundleTemplateDialog.open();
  },
  _onHideDownloadBundleTemplateDialog: function _onHideDownloadBundleTemplateDialog() {
    this.downloadBundleTemplateDialog.close();
  },
  _onDownloadBundleTemplate: function _onDownloadBundleTemplate(options) {
    var autoGenerateDescriptionKeyIfMissing = options.autoGenerateDescriptionKeyIfMissing,
        autoGenerateLabelKeyIfMissing = options.autoGenerateLabelKeyIfMissing;
    var shouldGenerateKeys = autoGenerateDescriptionKeyIfMissing || autoGenerateLabelKeyIfMissing;

    if (shouldGenerateKeys) {
      var bundleKeys = this.clientDomainSchemaAdvancedOptionsService.generateBundleKeys(options);
      this.applicationDispatcherEventBus.trigger(applicationStateEventsEnum.OPTIONS_DESIGNER_GENERATE_BUNDLE_KEYS, bundleKeys);
    } else {
      this._getBundleTemplateAndDownload();
    }

    this.downloadBundleTemplateDialog.close();
  },
  _getBundleTemplateAndDownload: function _getBundleTemplateAndDownload() {
    var template = this.clientDomainSchemaAdvancedOptionsService.getBundleTemplate();
    fileDownloader.download(template, bundleTemplateName);
  },
  'optionsDesigner:generateBundleKeys': function optionsDesignerGenerateBundleKeys() {
    this._getBundleTemplateAndDownload();
  }
});

module.exports = OptionsDesignerDownloadBundleTemplateDialogController;

});