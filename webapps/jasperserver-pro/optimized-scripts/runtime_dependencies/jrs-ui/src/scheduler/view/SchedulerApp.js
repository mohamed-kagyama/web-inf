/*
 * Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.
 * Licensed pursuant to commercial TIBCO End User License Agreement.
 */

define(["require","exports","module","jquery","underscore","bundle!all","backbone","requirejs-domready","runtime_dependencies/js-sdk/src/jrs.configs","../util/schedulerUtils","../model/JobModel","./JobsView","./JobEditorView","../../controls/controls.base"],function(e,t,i){var o=e("jquery"),s=e("underscore"),r=e("bundle!all"),n=e("backbone"),a=e("requirejs-domready"),d=e("runtime_dependencies/js-sdk/src/jrs.configs"),c=e("../util/schedulerUtils"),u=e("../model/JobModel"),h=e("./JobsView"),b=e("./JobEditorView"),l=e("../../controls/controls.base"),p=l.ControlsBase;a(function(){s.extend(p,d.inputControlsConstants)}),i.exports=n.View.extend({className:"schedulerApp",jobsView:!1,_createJobModel:function(){return new u},_createJobsView:function(e){return new h(e)},_createJobEditorView:function(e){return new b(e)},_getChildViewInitParams:function(){return{model:this._createJobModel(),runInBackgroundMode:this.runInBackgroundMode,masterViewMode:this.masterViewMode,reportUri:this.schedulerStartupParams.reportUnitURI,parentReportURI:this.schedulerStartupParams.parentReportURI||null}},initialize:function(e){this.options=s.extend({},e),this.runInBackgroundMode=0===document.location.hash.indexOf("#runInBackground@"),c.saveCurrentLocation(),this.schedulerStartupParams=c.getParamsFromUri(),this.masterViewMode=!this.schedulerStartupParams.reportUnitURI,this.childViewInitParams=this._getChildViewInitParams(),o.ajaxSetup({headers:{"X-Suppress-Basic":!0}}),o(document).on("ajaxError",function(e,t,i,o){401!==t.status&&"Unauthorized"!==o||location.reload()}),this.runInBackgroundMode?this.runNowRequest():this.openJobsListInterface()},prepareJobsView:function(){this.jobsView||(this.jobsView=this._createJobsView(this.childViewInitParams),this.listenTo(this.jobsView,"createNewJobRequest",this.createNewJobRequest),this.listenTo(this.jobsView,"runNowRequest",this.runNowRequest),this.listenTo(this.jobsView,"backButtonPressed",this.backButtonPressed),this.listenTo(this.jobsView,"editJobPressed",this.openEditJobInterface))},prepareJobEditorView:function(){this.jobEditorView&&this.jobEditorView.remove(),this.jobEditorView=this._createJobEditorView(this.childViewInitParams),this.listenTo(this.jobEditorView,"errorEditingJob",this.errorEditingJob),this.listenTo(this.jobEditorView,"cancelJobCreation",this.cancelJobCreation),this.listenTo(this.jobEditorView,"jobHasBeenCreated",this.jobHasBeenCreated)},openJobsListInterface:function(){this.prepareJobsView(),this.$el.empty(),this.jobsView.render(),this.$el.append(this.jobsView.$el),this.jobsView.refresh(),document.title=r["company.name"]+": "+r["report.scheduling.list.title"]},createNewJobRequest:function(){this._openNewJobInterface(!1)},runNowRequest:function(){this._openNewJobInterface(!0)},editJob:function(e){this.openEditJobInterface(e)},_openNewJobInterface:function(e){this.prepareJobEditorView(),this.jobEditorView.setRunNowMode(e),this.$el.empty(),this.jobEditorView.renderCreateNewJobInterface(),this.$el.append(this.jobEditorView.$el),this.jobEditorView.prepareModelForCreatingNewJob(),document.title=r["company.name"]+": "+r["report.scheduling.job.edit.title"]},openEditJobInterface:function(e){this.prepareJobEditorView(),this.$el.empty(),this.jobEditorView.editExistingJob(e),this.$el.append(this.jobEditorView.$el),document.title=r["company.name"]+": "+r["report.scheduling.job.edit.title"]},backButtonPressed:function(){c.getBackToPreviousLocation()},errorEditingJob:function(){this.openJobsListInterface()},cancelJobCreation:function(){this.runInBackgroundMode?c.getBackToPreviousLocation():this.openJobsListInterface()},jobHasBeenCreated:function(){this.runInBackgroundMode?c.getBackToPreviousLocation():this.openJobsListInterface()}})});