/*
 * Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.
 * Licensed pursuant to commercial TIBCO End User License Agreement.
 */

define(["require","exports","module","backbone","../enum/reportStatuses","request"],function(t,e,r){var a=t("backbone"),n=t("../enum/reportStatuses"),o=t("request");r.exports=a.Model.extend({defaults:function(){return{reportUnitUri:void 0,async:!0,allowInlineScripts:!1,markupType:"embeddable",outputFormat:void 0,interactive:!0,freshData:!1,saveDataSnapshot:!1,transformerKey:null,ignorePagination:!1,pages:1,anchor:void 0,attachmentsPrefix:void 0,baseUrl:void 0,parameters:void 0}},urlRun:function(){var t=this.get("baseUrl");return!t&&""!==t||"/"===t[t.length-1]||(t+="/"),t+="rest_v2/reportExecutions"},urlRemove:function(){return this.urlRun()+"/"+this.report.get("requestId")},urlUpdate:function(){if(!this.report.has("requestId"))throw new Error("You must execute report before requesting it's execution details or status.");return this.urlRun()+"/"+this.report.get("requestId")},urlExisting:function(){if(!this.report.has("executionId"))throw new Error("No execution ID to work with!");return this.urlRun()+"/"+this.report.get("executionId")},urlParameters:function(t){return this.urlUpdate()+"/parameters?freshData="+!!t},urlStatus:function(){return this.urlUpdate()+"/status"},urlPageStatus:function(t){return this.urlUpdate()+"/pages/"+t+"/status"},initialize:function(t,e){e||(e={}),this.report=e.report,this.on("change:baseUrl",function(){this.set("attachmentsPrefix","{contextPath}/rest_v2/reportExecutions/{reportExecutionId}/exports/{exportExecutionId}/attachments/".replace("{contextPath}",this.get("baseUrl")))},this)},run:function(){return this.report.has("executionId")?a.ajax({url:this.urlExisting(),type:"GET",dataType:"json",contentType:"application/json",headers:{Accept:"application/json"}}):a.ajax({url:this.urlRun(),type:"POST",processData:!1,dataType:"json",contentType:"application/json",headers:{Accept:"application/json"},data:JSON.stringify(this.toJSON())})},status:function(){return a.ajax({type:"GET",url:this.urlStatus(),dataType:"json",contentType:"application/json",headers:{Accept:"application/status+json"}})},pageStatus:function(t){return a.ajax({type:"GET",url:this.urlPageStatus(t),dataType:"json",contentType:"application/json",headers:{Accept:"application/json"}})},update:function(){return a.ajax({url:this.urlUpdate(),type:"GET",dataType:"json",contentType:"application/json",headers:{Accept:"application/json"}})},cancel:function(){return a.ajax({url:this.urlStatus(),type:"PUT",dataType:"json",contentType:"application/json",headers:{Accept:"application/json"},data:JSON.stringify({value:n.CANCELLED})})},applyParameters:function(t){return a.ajax({url:this.urlParameters(t),type:"POST",dataType:"json",contentType:"application/json",headers:{Accept:"application/json"},data:JSON.stringify(this.has("parameters")?this.get("parameters").reportParameter:[])})},remove:function(){return this.removeExecution()},removeExecution:function(){return o({url:this.urlRemove(),type:"DELETE"})}})});