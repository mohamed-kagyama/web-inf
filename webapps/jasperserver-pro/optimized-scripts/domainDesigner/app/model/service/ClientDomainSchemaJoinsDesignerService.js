/*
 * Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.
 * Licensed pursuant to commercial TIBCO End User License Agreement.
 */

define(["require","exports","module","underscore","../../../model/schema/util/entityUtil","../../../model/schema/enum/schemaEntitiesEnum","../../../model/schema/util/schemaModelUtil","../../../model/schema/mixin/allCollectionsMixin"],function(e,i,t){var n=e("underscore"),o=e("../../../model/schema/util/entityUtil"),a=e("../../../model/schema/enum/schemaEntitiesEnum"),s=e("../../../model/schema/util/schemaModelUtil"),l=e("../../../model/schema/mixin/allCollectionsMixin"),r=n.template("JoinTree_{{=suffix}}"),u=function(e){this.initialize(e)};n.extend(u.prototype,l,{initialize:function(e){this.dataStore=e.dataStore,this.joinTreeNameSuffixGenerator=e.joinTreeNameSuffixGenerator,this.mixInAllCollections(this.dataStore)},getAlwaysIncludeTableByJoinAliasId:function(e){var i=this.dataStore.getCollections(),t=i.joinAliases.byId(e);return t&&t.alwaysIncludeTable},getOptionsForAlwaysIncludedTableEnabledSpec:function(e){if(!e.joinTreeId||!o.isJoinAlias(e.type))return null;var i=s.getResourceByIdAndType(e.joinTreeId,a.JOIN_TREE,this.dataStore.getCollections());return{suppressCircularJoin:i.getSuppressCircularJoins(),includeAllDataIslandJoins:i.getIncludeAllDataIslandJoins()}},getFieldsForTablesInJoin:function(e){var i=this.dataStore.getCollections(),t=this.joins.byId(e),n=this.joinAliases.byId(t.getLeftJoinAliasId()),o=this.joinAliases.byId(t.getRightJoinAliasId());return this._getFieldsConstantJoin({collections:i,leftJoinAlias:n,rightJoinAlias:o})},generateJoins:function(e){var i=n.first(e).dataSourceId,t=this._groupJoinsInfoByJoinTree(e);return{dataSourceId:i,joinsInfo:this._generateJoinTrees(t)}},generateJoinTreeName:function(){return this._generateJoinTreeName()},_generateJoinTrees:function(e){return n.map(e,function(e){return n.extend({name:this._generateJoinTreeName(),joins:e},this._getJoinTreeDefaults())},this)},_getJoinTreeDefaults:function(){return{includeAllDataIslandJoins:!1,suppressCircularJoins:!1}},_groupJoinsInfoByJoinTree:function(e){var i,t,o,a,s,l,r,u={},c={},d=1;for(i=0;i<e.length;i++)t=e[i],o=void 0,a=t.leftTableId,s=t.rightTableId,l=c[a],r=c[s],l&&r&&l!==r?(n.each(Object.keys(c),function(e){c[e]===l&&(c[e]=r)}),u[r]=u[r].concat(u[l]),delete u[l],o=r):l||r?o=c[a]||c[s]:l||r||(o=d++),c[a]=o,c[s]=o,u[o]||(u[o]=[]),u[o].push(t);return u},_generateJoinTreeName:function(){var e=this;return this._generateName(this._getJoinTreeNameByTemplate,this.joinTreeNameSuffixGenerator,function(i){return e.joinTrees.byField("name",i)||e.dataSources.byField("name",i)})},_generateName:function(e,i,t){for(var n=e(i.next());t(n);)n=e(i.next());return n},_getJoinTreeNameByTemplate:function(e){return r({suffix:e})},_getFieldsConstantJoin:function(e){var i=e.collections,t=e.leftJoinAlias,n=e.rightJoinAlias,o=s.getTableFieldsByJoinAlias(t,i),a=s.getTableFieldsByJoinAlias(n,i),l=s.getCalcFieldsByJoinAlias(t,i),r=s.getCalcFieldsByJoinAlias(n,i),u=this._getFieldsJSON(o,t),c=this._getFieldsJSON(a,n),d=this._getFieldsJSON(l,t),m=this._getFieldsJSON(r,n);return u.concat(c).concat(d).concat(m)},_getFieldsJSON:function(e,i){return e.map(function(e){var t=e.toJSON();return t.joinAlias=i.getName(),t.joinAliasId=i.getId(),t})}}),t.exports=u});