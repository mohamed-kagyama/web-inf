/*
 * Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.
 * Licensed pursuant to commercial TIBCO End User License Agreement.
 */

define(["require","exports","module","underscore","../error/CannotParseJoinExpressionError","./specification/parseJoinExpressionSpecification","./specification/parseConstantJoinExpressionSpecification","../../expressionWalker","../enum/joinParserStateNamesEnum","../../../enum/clientExpressionsEnum"],function(t,e,n){var r=t("underscore"),i=t("../error/CannotParseJoinExpressionError"),o=t("./specification/parseJoinExpressionSpecification"),s=t("./specification/parseConstantJoinExpressionSpecification"),a=(t("../../expressionWalker"),t("../enum/joinParserStateNamesEnum")),c=t("../../../enum/clientExpressionsEnum"),u=c.operators,E=function(t){this.initialize(t)};r.extend(E.prototype,{initialize:function(t){this.context=t.context,this.factory=t.factory},and:function(){return this.factory.create(a.PARSE_JOIN_EXPRESSION_OPERATOR_STATE,this.context)},not:function(){return this.context.isNot=!0,this.factory.create(a.PARSE_JOIN_EXPRESSION_OPERATOR_STATE,this.context)},operands:function(){return this.factory.create(a.PARSE_JOIN_EXPRESSION_OPERATOR_STATE,this.context)},paren:function(){return this.factory.create(a.PARSE_JOIN_EXPRESSION_OPERATOR_STATE,this.context)},equals:function(t){var e=this.context.isNot?u.notEqual.name:u.equals.name;return this._setOperator(e,t)},notEqual:function(t){return this._setOperator(u.notEqual.name,t)},greater:function(t){return this._setOperator(u.greater.name,t)},less:function(t){return this._setOperator(u.less.name,t)},greaterOrEqual:function(t){return this._setOperator(u.greaterOrEqual.name,t)},lessOrEqual:function(t){return this._setOperator(u.lessOrEqual.name,t)},in:function(t){var e=this.context.isNot?u.notIn.name:u.in.name;return this._setOperator(e,t)},_setOperator:function(t,e){var n=e.operands,c=r.first(n),u=r.last(n),E={operator:t,firstOperand:c,secondOperand:u};if(this.context.currentJoinExpression.operator=t,o.isSatisfiedBy(E))return this.factory.create(a.PARSE_JOIN_EXPRESSION_STATE,this.context);if(s.isSatisfiedBy(E))return this.factory.create(a.PARSE_CONSTANT_JOIN_EXPRESSION_STATE,this.context);throw new i}}),n.exports=E});