/*
 * Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.
 * Licensed pursuant to commercial TIBCO End User License Agreement.
 */

define(["require","exports","module","underscore","../../enum/operandSideEnum","../../../../../../model/schema/util/entityUtil","../../util/filterOperandTypeUtil","../../../../../../model/schema/enum/filterOperandTypesEnum"],function(e,r,t){function i(e,r){return n.find(e,function(e){return e.id===r})}var n=e("underscore"),o=e("../../enum/operandSideEnum"),a=e("../../../../../../model/schema/util/entityUtil"),s=e("../../util/filterOperandTypeUtil"),d=e("../../../../../../model/schema/enum/filterOperandTypesEnum"),p=function(e){this.initialize(e)};n.extend(p.prototype,{initialize:function(e){this.onEditDraftFilterOperandSourceProvider=e.onEditDraftFilterOperandSourceProvider,this.filtersDesignerDraftFilterRightOperandConverter=e.filtersDesignerDraftFilterRightOperandConverter,this.filtersDesignerDraftFilterFactory=e.filtersDesignerDraftFilterFactory,this.clientDomainSchemaService=e.clientDomainSchemaService},convert:function(e){var r=this,t=this._getDraftFilterFactoryOptions(e),i={rightOperandType:t.expression.right.type,operator:t.expression.operator};return this.filtersDesignerDraftFilterFactory.create(t,i).then(function(e){return e=r._updateOperandsSource(e),n.extend({},e,{sourceId:null,sourceType:null})})},_updateOperandsSource:function(e){return e=this._updateOperandSource({draftFilter:e,operandSide:o.LEFT}),e=this._updateOperandSource({draftFilter:e,operandSide:o.RIGHT})},_updateOperandSource:function(e){var r=e.draftFilter,t=e.operandSide,i=n.cloneDeep(r),o=r.expression[t],d=this.onEditDraftFilterOperandSourceProvider.getSource(r,t);if(s.isVariable(o.type)&&!a.isConstantGroup(o.sourceType)){var p={};p[t]=n.extend({},o,d),i.expression=n.extend({},r.expression,p)}return i},_getDraftFilterFactoryOptions:function(e){var r,t=e.expression.left.fieldReferenceId,n=e.expression.right.fieldReferenceId,o=i(e.fieldReferences,t),a=this.clientDomainSchemaService.getGenericFiledTypeById(o.fieldId),s=this._getVariableOperand(e.fieldReferences,e.expression.left),d={dataType:a,expression:{left:s,operator:e.expression.operator},sourceId:e.sourceId,sourceType:e.sourceType,id:e.id};r=n?this._getVariableOperand(e.fieldReferences,e.expression.right):e.expression.right;var p=this.filtersDesignerDraftFilterRightOperandConverter.convert(r,{dataType:a});return d.expression.right=p||r,d},_getVariableOperand:function(e,r){var t=i(e,r.fieldReferenceId);return n.extend({},n.omit(t,"id"),{type:d.VARIABLE})}}),t.exports=p});