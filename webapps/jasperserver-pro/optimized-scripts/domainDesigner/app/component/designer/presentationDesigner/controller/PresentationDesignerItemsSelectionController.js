/*
 * Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.
 * Licensed pursuant to commercial TIBCO End User License Agreement.
 */

define(["require","exports","module","underscore","backbone","../../../../dispatcher/enum/applicationStateEventsEnum"],function(e,t,i){var n=e("underscore"),s=e("backbone"),o=e("../../../../dispatcher/enum/applicationStateEventsEnum"),r=function(e){this.initialize(e)};n.extend(r.prototype,s.Events,{initialize:function(e){this.presentationDesignerEventBus=e.presentationDesignerEventBus,this.applicationDispatcherEventBus=e.applicationDispatcherEventBus,this.presentationDesignerViewStateModelService=e.presentationDesignerViewStateModelService,this.presentationItemsRangeSelectionProvider=e.presentationItemsRangeSelectionProvider,this._initEvents()},_initEvents:function(){this.listenTo(this.presentationDesignerEventBus,"presentationItem:select",this.selectItem),this.listenTo(this.presentationDesignerEventBus,"presentationItem:addToSelectionRange",this.onRangeSelection),this.listenTo(this.presentationDesignerEventBus,"presentationItem:toggleSelection",this.toggleItemSelection)},onRangeSelection:function(e){var t;this.presentationDesignerViewStateModelService.isPresentationItemsSelectionEmpty()?this.selectItem(e):this.presentationDesignerViewStateModelService.canTogglePresentationItemSelection(e)&&(t=this.presentationItemsRangeSelectionProvider.getRangeSelectionByLastSelectedItem(e),this.applicationDispatcherEventBus.trigger(o.PRESENTATION_DESIGNER_SET_SELECTION,t))},toggleItemSelection:function(e){var t,i=this.presentationDesignerViewStateModelService.canTogglePresentationItemSelection(e);this.presentationDesignerViewStateModelService.isPresentationItemsSelectionEmpty()?this.selectItem(e):i&&(t=this.presentationDesignerViewStateModelService.getNewPresentationItemsSelection(e,{toggle:!0,parentId:e.parentId}),this.applicationDispatcherEventBus.trigger(o.PRESENTATION_DESIGNER_SET_SELECTION,t))},selectItem:function(e){var t;this.presentationDesignerViewStateModelService.canSelectPresentationItem(e)&&(n.extend(e,{rangeSelectionStartItem:!0}),t=this.presentationDesignerViewStateModelService.getNewPresentationItemsSelection(e,{parentId:e.parentId}),this.applicationDispatcherEventBus.trigger(o.PRESENTATION_DESIGNER_SET_SELECTION,t))}}),i.exports=r});