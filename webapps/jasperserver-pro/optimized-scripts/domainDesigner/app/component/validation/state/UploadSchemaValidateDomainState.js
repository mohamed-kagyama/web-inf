/*
 * Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.
 * Licensed pursuant to commercial TIBCO End User License Agreement.
 */

define(["require","exports","module","underscore","jquery","../../../model/enum/canvasViewDesignersEnum","./enum/expandedDomainSchemaUrlParamsEnum","./enum/validationStateNameEnum","../../../model/enum/resourceTypeEnum"],function(e,r,t){var n=e("underscore"),i=e("jquery"),a=e("../../../model/enum/canvasViewDesignersEnum"),o=e("./enum/expandedDomainSchemaUrlParamsEnum"),s=e("./enum/validationStateNameEnum"),c=e("../../../model/enum/resourceTypeEnum"),u=function(e){this.initialize(e)};n.extend(u.prototype,{initialize:function(e){this.validationService=e.validationService,this.dataSourceInfoService=e.dataSourceInfoService,this.asyncServerSchemaModelParserService=e.asyncServerSchemaModelParserService,this.schemaModelConverter=e.schemaModelConverter,this.entitiesWithExpressionUpdateService=e.entitiesWithExpressionUpdateService,this.parametrizedSchemaResolvingService=e.parametrizedSchemaResolvingService,this.designerViewStateByDomainProvider=e.designerViewStateByDomainProvider},enter:function(e,r){var t=e.domainResource;this.validationService.validateDomain(t,{uriParams:o}).then(n.bind(this._onSuccessSchemaValidation,this,e,r)).then(null,n.bind(this._onFailedSchemaValidation,this,e,r))},_onSuccessSchemaValidation:function(e,r,t){var n=this;return this.dataSourceInfoService.getDataSourceInfo(t.dataSource.dataSourceReference.uri).then(function(e){return n._getDesignerState(t,e)}).then(function(t){e.designerState=t,r.enter(s.UPLOAD_SCHEMA_FINAL_STATE,e)})},_getDesignerState:function(e,r){var t=this,n=this._addDataSourceToSchemaIfNecessary(e.schema,r);return this.asyncServerSchemaModelParserService.parse(n).then(function(e){return t._updateExpressionsAndResolveProfileAttributes(e)}).then(function(e){var n,i;return i=t.designerViewStateByDomainProvider.getViewState(e,{dataSourceType:r.type,currentDesigner:a.PRESENTATION_DESIGNER}),n=t.schemaModelConverter.toJSON(e),{schema:n,viewState:i,dataSource:{name:t._getNameOfTheDataSource(e),type:r.type,uri:r.uri}}})},_addDataSourceToSchemaIfNecessary:function(e,r){return this._isSchemaContainsDataSource(e)||e.resources.push({group:{name:r.name,elements:[]}}),e},_isSchemaContainsDataSource:function(e){return e.resources.find(function(e){if(e[c.resources.groups.GROUP])return!0})},_updateExpressionsAndResolveProfileAttributes:function(e){var r=this.entitiesWithExpressionUpdateService.update(e),t=this.parametrizedSchemaResolvingService.resolve(e);return i.when(r,t).then(function(e){return e})},_getNameOfTheDataSource:function(e){return e.dataSources.first().name},_onFailedSchemaValidation:function(e,r,t){e.error=t,r.enter(s.UPLOAD_SCHEMA_VALIDATION_ERROR_STATE,e)}}),t.exports=u});