/*
 * Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.
 * Licensed pursuant to commercial TIBCO End User License Agreement.
 */

define(["require","exports","module","../enum/filterDataTypes","../enum/filterOperators","runtime_dependencies/js-sdk/src/jrs.configs","underscore"],function(e,n,u){var a=e("../enum/filterDataTypes"),l=e("../enum/filterOperators"),i=e("runtime_dependencies/js-sdk/src/jrs.configs"),r=e("underscore"),s={};s[a.STRING]={},s[a.STRING][l.IN]={value:[],isAnyValue:!0},s[a.STRING][l.NOT_IN]={value:[],isAnyValue:!1},s[a.STRING][l.EQUALS]=function(e){return{value:e.values[0],isAnyValue:!1}},s[a.STRING][l.NOT_EQUAL]=function(e){return{value:e.values[0],isAnyValue:!1}},s[a.STRING][l.CONTAINS]={value:"",isAnyValue:!1},s[a.STRING][l.NOT_CONTAINS]={value:"",isAnyValue:!1},s[a.STRING][l.STARTS_WITH]={value:"",isAnyValue:!1},s[a.STRING][l.NOT_STARTS_WITH]={value:"",isAnyValue:!1},s[a.STRING][l.ENDS_WITH]={value:"",isAnyValue:!1},s[a.STRING][l.NOT_ENDS_WITH]={value:"",isAnyValue:!1};var t={};t[l.IN]={value:[],isAnyValue:!0},t[l.NOT_IN]={value:[],isAnyValue:!1},t[l.EQUALS]={value:i.inputControlsConstants.NULL_SUBSTITUTION_VALUE,isAnyValue:!1},t[l.NOT_EQUAL]={value:i.inputControlsConstants.NULL_SUBSTITUTION_VALUE,isAnyValue:!1},t[l.GREATER]=function(e){return{value:e.min,isAnyValue:!1}},t[l.GREATER_OR_EQUAL]=function(e){return{value:e.min,isAnyValue:!1}},t[l.LESS]=function(e){return{value:e.max,isAnyValue:!1}},t[l.LESS_OR_EQUAL]=function(e){return{value:e.max,isAnyValue:!1}},t[l.BETWEEN]=function(e){return{value:[e.min,e.max],isAnyValue:!1}},t[l.NOT_BETWEEN]=function(e){return{value:[e.min,e.max],isAnyValue:!1}};var A=r.omit(t,l.BETWEEN,l.NOT_BETWEEN);A[l.BETWEEN_DATES]=function(e){return{value:[e.min,e.max],isAnyValue:!0}},A[l.NOT_BETWEEN_DATES]=function(e){return{value:[e.min,e.max],isAnyValue:!1}},s[a.INTEGER]=r.clone(t),s[a.NUMERIC]=r.clone(t),s[a.LONG]=r.clone(t),s[a.DECIMAL]=r.clone(t),s[a.TIME]=r.clone(t),s[a.TIMESTAMP]=r.clone(A),s[a.DATE]=r.clone(A),s[a.BOOLEAN]={},s[a.BOOLEAN][l.IN]={value:[],isAnyValue:!0},s[a.BOOLEAN][l.NOT_IN]={value:[],isAnyValue:!1},s[a.BOOLEAN][l.EQUALS]={value:"false",isAnyValue:!1},s[a.BOOLEAN][l.NOT_EQUAL]={value:"false",isAnyValue:!1};var T={};T[l.IN]=function(e){return e.allValuesLoaded?{value:e.values,isAnyValue:!1}:{value:[],isAnyValue:!1}},T[l.NOT_IN]={value:[],isAnyValue:!1},T[l.EQUALS]=function(e){return{value:e.values[0],isAnyValue:!1}},T[l.NOT_EQUAL]=function(e){return{value:e.values[0],isAnyValue:!1}},u.exports=function(e,n,u,a){var l;if(u){if(!(n in T))throw new Error("Operator '"+n+"' is not supported in OLAP mode");l=T[n]}else{if(!(e in s))throw new Error("Filter data type '"+e+"' is not supported");if(!(n in s[e]))throw new Error("Operator '"+n+"' is not supported by filter data type '"+e+"'");l=s[e][n]}return r.isFunction(l)?l(a):l}});