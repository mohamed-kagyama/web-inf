/*
 * Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved. Confidentiality & Proprietary.
 * Licensed pursuant to commercial TIBCO End User License Agreement.
 */

define(["require","exports","module","backbone","underscore","text!runtime_dependencies/js-sdk/src/common/component/tree/template/searchPluginTemplate.htm","runtime_dependencies/jrs-ui/src/dynamicTree/dynamicTree.utils"],function(e,t,r){var i=e("backbone"),n=e("underscore"),s=e("text!runtime_dependencies/js-sdk/src/common/component/tree/template/searchPluginTemplate.htm"),o=e("runtime_dependencies/jrs-ui/src/dynamicTree/dynamicTree.utils");r.exports=i.View.extend({template:n.template(s),el:function(){return this.template()},events:{"click .button.search":"onClickOnSearchButton","click .button.searchClear":"onClearSearch","keydown input[type=text]":"onKeyPress"},initialize:function(e){n.bindAll(this,"onTreeLoaded","_walkThroughTree","_saveTreeStateAction","_restoreSavedTreeStateAction"),this.tree=e.tree,this.depth=e.depth,this.treeState={},this.model=new i.Model,this.initObservers(),e.keyword&&this.setKeyword(e.keyword)},initObservers:function(){this.listenTo(this.model,"change:keyword",this.onChangeKeyword)},_walkThroughTree:function(e,t){var r,i=e.childs.length;for(r=0;r<i;r++)this._walkThroughTree(e.childs[r],t);t(e)},_saveTreeStateAction:function(e){this.tree.stateObject[e.id]&&(this.treeState[e.param.id]=this.tree.stateObject[e.id]),o.nodes[e.id]=void 0},_restoreSavedTreeStateAction:function(e){var t=this.treeState[e.param.id];t&&(this.tree.stateObject[e.id]=t)},onChangeKeyword:function(){var e=this.getKeyword();this.model.previous("keyword")||this._walkThroughTree(this.tree.rootNode,this._saveTreeStateAction),this.tree.additionalParams.query=e,this.tree.showTree(this.depth,this.onTreeLoaded),e?this.$el.find(".button.searchClear").addClass("up"):this.$el.find(".button.searchClear").removeClass("up"),this.trigger("change:keyword",e)},onClickOnSearchButton:function(){this.model.set("keyword",this.$el.find("input[type=text]").val())},onClearSearch:function(){this.setKeyword("")},onKeyPress:function(e){13===e.which&&this.onClickOnSearchButton()},onTreeLoaded:function(){this.getKeyword()||(this.tree.resetStates(),this._walkThroughTree(this.tree.rootNode,this._restoreSavedTreeStateAction),this.treeState={}),this.tree.renderTree()},setKeyword:function(e){this.$el.find("input[type=text]").val(e),this.model.set("keyword",e)},getKeyword:function(){return this.model.get("keyword")}})});